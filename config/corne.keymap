#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        lhm: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };
        lhm_ctrl: homerow_mods_left_ctrl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 1 2 13 15 27 29>;
        };
        lhm_alt: homerow_mods_left_alt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 3 16 17>;
        };
        rhm: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <20>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <40>;
            key-positions = <16 17>;
            bindings = <&kp TAB>;
            layers = <0>;
        };
        combo_oe {
            timeout-ms = <20>;
            key-positions = <20 21>;
            bindings = <&kp SEMICOLON>;
            layers = <0>;
        };
        combo_ae {
            timeout-ms = <20>;
            key-positions = <21 22>;
            bindings = <&kp SINGLE_QUOTE>;
            layers = <0>;
        };
        combo_clear_bt_profile {
            timeout-ms = <20>;
            key-positions = <36 41>;
            bindings = <&bt BT_CLR>;
            layers = <3>;
        };
        combo_mo_layer_3 {
            timeout-ms = <30>;
            key-positions = <37 40>;
            bindings = <&mo 3>;
        };
        combo_emark {
            timeout-ms = <30>;
            key-positions = <8 9>;
            bindings = <&kp UNDERSCORE>;
            layers = <0>;
        };
        combo_qmark {
            timeout-ms = <30>;
            key-positions = <9 10>;
            bindings = <&kp UNDERSCORE>;
            layers = <0>;
        };
        combo_lbracket {
            timeout-ms = <80>;
            key-positions = <31 32>;
            bindings = <&kp RA(N7)>;
            layers = <1>;
        };
        combo_rbracket {
            timeout-ms = <80>;
            key-positions = <33 34>;
            bindings = <&kp RA(N0)>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        L0 {
            label = "Layer_0";
            bindings = <
&none  &kp Q          &kp W              &kp F            &kp P  &kp B      &kp J      &kp L  &kp U        &kp Y         &kp BACKSPACE   &none
&none  &lhm LSHIFT A  &lhm_ctrl LCTRL R  &lhm_alt LALT S  &kp T  &kp G      &kp M      &kp N  &rhm LALT E  &rhm LCTRL I  &rhm LSHIFT O   &none
&none  &lhm LGUI Z    &kp X              &kp C            &kp D  &kp V      &kp K      &kp H  &kp COMMA    &kp PERIOD    &rhm LGUI BSLH  &none
                                         &none            &mo 1  &kp SPACE  &kp ENTER  &mo 2  &none      
            >;
        };
        L1 {
            label = "Layer_1";
            bindings = <
&none  &none                 &none             &none        &none  &none  &none  &kp HOME  &kp PG_DN  &kp PG_UP      &kp END     &none
&none  &lhm LSHIFT KP_MINUS  &lhm LCTRL QMARK  &lhm LALT X  &kp X  &none  &none  &kp LEFT  &kp DOWN   &kp UP         &kp RIGHT   &none
&none  &none                 &none             &none        &none  &none  &none  &none     &none      &kp LS(EQUAL)  &kp LS(N2)  &none
                                               &none        &none  &none  &none  &none     &none    
            >;
        };
        L2 {
            label = "Layer_2";
            bindings = <
&none  &kp EXCLAMATION      &kp UNDERSCORE  &kp LS(BSLH)  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_MINUS  &kp KP_PLUS  &kp NON_US_BSLH  &kp LS(NON_US_BSLH)  &kp DEL     &none
&none  &kp N1               &kp N2          &kp N3        &kp N4           &kp N5         &kp N6        &kp N7       &kp N8           &kp N9               &kp N0      &none
&none  &kp RA(NON_US_BSLH)  &kp RA(N2)      &kp RA(3)     &kp RA(N4)       &kp RA(E)      &kp LS(N3)    &kp RA(N8)   &kp LS(N8)       &kp LS(N9)           &kp RA(N9)  &none
                                            &none         &none            &none          &none         &none        &none          
            >;
        };
        L3 {
            label = "Layer_3";
            bindings = <
&none  &kp F1  &kp F2  &kp F3      &kp F4  &kp F5  &kp F6        &kp F7          &kp F8             &kp F9           &kp F10  &none
&none  &none   &none   &none       &none   &none   &kp C_BRI_DN  &kp C_BRI_UP    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp F11  &none
&none  &none   &none   &none       &none   &none   &kp C_RW      &kp C_PREVIOUS  &kp C_PP           &kp C_NEXT       &kp F12  &none
                       &bt BT_PRV  &none   &none   &none         &none           &bt BT_NXT       
            >;
        };
    };
};
