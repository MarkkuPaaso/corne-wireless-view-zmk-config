#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        macro_lthan: macro_lthan {
            label = "lesser_than";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp N6 &kp N0>,
                <&macro_release>,
                <&kp LALT>;
        };

        macro_gthan: macro_gthan {
            label = "greater_than";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp N6 &kp N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_ae {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <13 14>;
            layers = <0>;
        };

        combo_oe {
            bindings = <&kp SEMICOLON>;
            key-positions = <21 22>;
            layers = <0>;
        };

        combo_tab {
            bindings = <&kp T>;
            key-positions = <2 3>;
            layers = <0 1 2 3>;
        };

        combo_both_layer {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&trans  &kp Q  &kp W  &kp F             &kp P  &kp B        &kp J      &kp L  &kp U           &kp Y    &kp BACKSPACE  &trans
&trans  &kp A  &kp R  &kp S             &kp T  &kp G        &kp M      &kp N  &kp E           &kp I    &kp O          &trans
&trans  &kp Z  &kp X  &kp C             &kp D  &kp V        &kp K      &kp H  &kp COMMA       &kp DOT  &kp BACKSLASH  &trans
                      &kp LEFT_CONTROL  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp LEFT_SHIFT
            >;
        };

        lower_layer {
            label = "Lower";
            bindings = <
&trans  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp SQT           &kp DLLR              &kp PERCENT              &kp PIPE   &kp N7  &kp N8           &kp N9  &kp AMPERSAND  &trans
&trans  &kp AMPERSAND    &kp SLASH          &kp EQUAL         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp MINUS  &kp N4  &kp N5           &kp N6  &kp SLASH      &trans
&trans  &kp AT_SIGN      &kp BACKSLASH      &kp HASH          &kp SEMICOLON         &kp SINGLE_QUOTE         &kp N0     &kp N1  &kp N2           &kp N3  &kp PERIOD     &trans
                                            &kp LEFT_CONTROL  &trans                &trans                   &trans     &trans  &kp RIGHT_SHIFT
            >;
        };

        raise_layer {
            label = "Raise";
            bindings = <
&trans  &kp RS(N1)    &trans         &trans            &kp RA(N8)  &kp RA(N9)    &trans  &trans    &kp UP           &trans     &trans  &trans
&trans  &kp RS(N1)    &kp RS(MINUS)  &trans            &kp RS(N8)  &kp RS(N9)    &trans  &kp LEFT  &kp DOWN         &kp RIGHT  &trans  &trans
&trans  &macro_lthan  &macro_gthan   &trans            &kp RA(N7)  &kp RA(N0)    &trans  &trans    &trans           &trans     &trans  &trans
                                     &kp LEFT_CONTROL  &trans      &trans        &trans  &trans    &kp RIGHT_SHIFT
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1    &kp F2  &kp F3  &kp F4  &kp F5    &kp F6                &kp F7                &kp F8             &kp F9           &kp F10  &trans
&trans  &trans    &trans  &trans  &trans  &trans    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp F11  &trans
&trans  &kp LGUI  &trans  &trans  &trans  &trans    &kp K_BACK            &kp K_STOP            &kp K_PLAY_PAUSE   &kp K_FORWARD    &kp F12  &trans
                          &trans  &trans  &trans    &trans                &trans                &trans
            >;
        };
    };
};
